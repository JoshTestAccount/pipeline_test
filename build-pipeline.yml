trigger:
  branches:
    include:
    - main
  paths:
    exclude:
    - CODE_OF_CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE
    - README.md
    - SECURITY.md
pr:
  branches:
    include:
    - main
  paths:
    exclude:
    - CODE_OF_CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE
    - README.md
    - SECURITY.md

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '5b196e82-84a2-4819-9605-a94dae8a565c'
  containerRegistry: 'joshcacr.azurecr.io'
  imageName: 'pipeline_test'
  feedName: 'pipeline_feed_test'
  setupFile: 'setup_batchkit.py'
  vmImageName: 'ubuntu-20.04'

stages:
- stage: BuildTestRelease 
  displayName: Build, Test, and Release Python packages and Docker image in single stage
  jobs:   
  - job: BuildTestRelease
    displayName: Build, Test, and Release Python packages and Docker image in single job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: CmdLine@2
      displayName: Setup Python virtual environment and install required packages Python package
      inputs:
        script: |
          sudo apt-get install dos2unix
          sudo apt-get install -y python3-venv
          python -m venv my_venv
          source my_venv/bin/activate
          python -m pip install --upgrade pip
          pip install twine wheel
    - task: CmdLine@2
      displayName: Build Python package
      inputs:
        script: |
          chmod 755 $(setupFile)
          python $(setupFile) sdist bdist_wheel
    - task: CmdLine@2
      displayName: Execute Python package unit and stress tests
      inputs:
        script: |
          chmod 755 run-stress-tests.py run-tests
          dos2unix run-tests
          ./run-tests
          python run-stress-tests.py
    - task: CmdLine@2
      displayName: Publish Python package
      inputs:
        # Package will not publish if version has not been changed
        script: |
          source my_venv/bin/activate
          python -m pip install --upgrade pip
          twine check dist/*
          twine upload dist/* -u __token__ -p $(PYPI_API_TOKEN)
    - task: Docker@2
      displayName: Build Docker image
      inputs:
        command: build
        repository: $(imageName)
        Dockerfile: joshc_repo_examples/speech_sdk/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest
    - task: Docker@2
      displayName: Push Docker image
      inputs:
        command: push
        repository: $(imageName)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest