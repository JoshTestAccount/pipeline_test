trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '5b196e82-84a2-4819-9605-a94dae8a565c'
  containerRegistry: 'joshcacr.azurecr.io'

  imageName: 'pipeline_test'
  feedName: 'pipeline_feed_test'
  setupFile: 'setup_batchkit.py'
  vmImageName: 'ubuntu-20.04' # set to windows-latest or another Windows vmImage for Windows builds

pool:
  vmImage = $(vmImageName)

stages:

- stage: Build 
  displayName: Build Python packages and Docker image

  # jobs run on independent agents
  jobs:
  - job: BuildPythonAndDocker
    displayName: Build Python packages and Docker image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: TwineAuthenticate@1
      displayName: 'Twine Authenticate'
      inputs:
        artifactFeed: Skyman/$(feedName)
    - task: CmdLine@2
      displayName: Build Python package
      inputs:
        script: |
          sudo apt-get install -y python3-venv
          python3 -m venv my_venv
          source my_venv/bin/activate
          pip install twine
          pip install wheel
          ls | xargs
          chmod 755 $(setupFile)
          python $(setupFile) sdist bdist_wheel
          twine check dist/*
          python -m twine upload -r $(feedName) --config-file $(PYPIRC_PATH) dist/*
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageName)
        Dockerfile: joshc_repo_examples/speech_sdk/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest

- stage: Test 
  displayName: Test Python packages and Docker image
  jobs:
  - job: TestPythonAndDocker
    displayName: Test Python packages and Docker image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: CmdLine@2
      displayName: Pull image from container registry and start container 
      inputs:
        script: |
          docker login $(containerRegistry) -u joshcacr -p ynWDQaKb0a1jNAWSaMvY/bRm91oHx2da
          docker pull $(containerRegistry)/$(imageName):latest
          docker run $(containerRegistry)/$(imageName)

# - stage: Release